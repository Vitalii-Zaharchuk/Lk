{"version":3,"sources":["hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Component/Profile/Profile.module.css","Component/Profile/AboutMe/AboutMe.module.css","Component/Profile/AboutMe/ProfileStatus.js","Component/Profile/AboutMe/ProfileStatusWithHooks.js","Component/Profile/AboutMe/AboutMe.js","Component/Profile/MyPost/MyPost.js","Component/Profile/MyPost/MyPostContainer.js","Component/Profile/Profile.js","Component/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","useState","status","setStatus","editMode","setEditMode","useEffect","onDuubleClick","autoFocus","onBlur","updateStatusThunk","onChange","e","currentTarget","AboutMe","profile","className","s","aboutMe","zastavka","src","info","ava","photos","small","me","fullName","MyPost","memo","console","log","PostItem","id","post","newPostElement","createRef","PostElement","profilePage","map","p","myPost","ref","text","current","updateNewPostText","newPost","onClick","addPost","MyPostContainer","dispatch","action","updateNewPostTextAC","addPostAC","Profile","store","ProfileContainer","userId","match","params","axios","then","response","setUsersProfile","data","setStatusThunk","compose","withRouter"],"mappings":"2MAGIA,EAA8B,SAACC,GAC/B,MAAM,CACFC,OAAOD,EAAME,KAAKD,SAGbE,EAAmB,SAACC,GAAc,IACrCC,EADoC,uKAGlC,OAAyB,IAAtBC,KAAKC,MAAMN,OAAyB,kBAAC,IAAD,CAAUO,GAAI,WAC9C,kBAACJ,EAAcE,KAAKC,WAJO,GACVE,IAAML,WAOvC,OADsCM,YAAQX,EAARW,CAAoCL,K,+ECX9D,SAASM,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,KAAO,sBAAsB,IAAM,qBAAqB,GAAK,sB,wLCAxF1B,IAAML,U,QCkCnBgC,EAhCgB,SAAC7B,GAAU,IAAD,EACb8B,mBAAS9B,EAAM+B,QADF,mBACjCA,EADiC,KAC1BC,EAD0B,OAERF,oBAAS,GAFD,mBAEhCG,EAFgC,KAEvBC,EAFuB,KAgBrC,OAHAC,qBAAU,WACNH,EAAUhC,EAAM+B,UAClB,CAAC/B,EAAM+B,SAEL,8BACWE,GACC,6BACI,0BAAMG,cAjBD,WACrBF,GAAY,KAgB4ClC,EAAM+B,QAAU,QAG/DE,GACO,6BACI,2BAAOI,WAAW,EAAMC,OAnBrB,WACvBJ,GAAY,GACZlC,EAAMuC,kBAAkBR,IAiBgDS,SAfpD,SAACC,GACrBT,EAAaS,EAAEC,cAAcpB,OAcqEA,MAAOS,OCOlGY,EA/BD,SAAC3C,GAEX,OAAIA,EAAM4C,QAIN,yBAAKC,UAAWC,IAAEC,SAEd,yBAAKF,UAAWC,IAAEE,UACd,yBAAKC,IAAI,2GAEb,yBAAKJ,UAAWC,IAAEI,MACd,yBAAML,UAAWC,IAAEK,KACa,OAA/BnD,EAAM4C,QAAQQ,OAAOC,MACtB,yBAAKJ,IAAI,wJACP,yBAAKA,IAAKjD,EAAM4C,QAAQQ,OAAOC,SAGjC,yBAAKR,UAAWC,IAAEQ,IACU,OAA3BtD,EAAM4C,QAAQW,SAAmB,wCAAmB,4BAAKvD,EAAM4C,QAAQW,UAEpE,sCACA,kCACA,kBAAC,EAAD,CAAwBxB,OAAQ/B,EAAM+B,OAClCQ,kBAAmBvC,EAAMuC,uBArBlC,oC,kBCyBAiB,EA3BFtD,IAAMuD,MAAK,SAAAzD,GACpB0D,QAAQC,IAAI,MACZ,IAAIC,EAAW,SAAC5D,GACZ,OACA,yBAAKC,GAAI,QAAUD,EAAM6D,IAAK7D,EAAM8D,OAGpCC,EAAiB7D,IAAM8D,YACvBC,EAAcjE,EAAMkE,YAAYJ,KAAKK,KAAI,SAAAC,GAAC,OAAG,kBAACR,EAAD,CAAUE,KAAMM,EAAEN,KAAMD,GAAIO,EAAEP,QAU/E,OACI,yBAAKhB,UAAWC,IAAEuB,QACd,uCACCJ,EACD,8BAAUK,IAAKP,EAAgBvB,SATpB,WACf,IAAI+B,EAAOR,EAAeS,QAAQlD,MAClCtB,EAAMyE,kBAAkBF,IAOmCjD,MAAOtB,EAAMkE,YAAYQ,UAChF,4BAAQC,QAdF,WAEV3E,EAAM4E,YAYF,YCDGC,EADO1E,aAhBA,SAACV,GACnB,MAAM,CACFyE,YAAazE,EAAMyE,gBAGF,SAACY,GACtB,MAAM,CACFL,kBAAkB,SAACF,GACf,IAAIQ,EAASC,YAAoBT,GACjCO,EAASC,IAEbH,QAAQ,WACJE,EAASG,mBAIC9E,CAA8CqD,GCVrD0B,EAXD,SAAClF,GAGX,OACI,yBAAK6C,UAAWC,IAAEF,SACd,kBAAC,EAAD,CAASA,QAAS5C,EAAM4C,QAASb,OAAQ/B,EAAM+B,OACnCQ,kBAAmBvC,EAAMuC,oBACrC,kBAAC,EAAD,CAAiB4C,MAAOnF,EAAMmF,U,gBCJpCC,E,kLACkB,IAAD,OAEXC,EAAStF,KAAKC,MAAMsF,MAAMC,OAAOF,OACjCA,IACAA,EAAS,MAEbG,MAAU,wDAAyDH,GAAQI,MAAK,SAAAC,GAC5E,EAAK1F,MAAM2F,gBAAgBD,EAASE,SAExC7F,KAAKC,MAAM6F,eAAeR,K,+BAG1B,OACI,6BACI,kBAAC,EAAD,iBAAatF,KAAKC,MAAlB,CACQ4C,QAAS7C,KAAKC,MAAM4C,QACpBb,OAAQhC,KAAKC,MAAM+B,OACnBQ,kBAAmBxC,KAAKC,MAAMuC,0B,GAlBvBrC,IAAML,WAoCtBiG,sBACX3F,aAZkB,SAACV,GACnB,MAAM,CACFmD,QAAQnD,EAAMyE,YAAYtB,QAC1BlD,OAAOD,EAAME,KAAKD,OAClBqC,OAAOtC,EAAMyE,YAAYnC,UAQJ,CAAC4D,oBAAgBE,mBAAetD,wBACzDwD,IACAnG,IAHWkG,CAIbV","file":"static/js/3.3b3a1217.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nlet mapStateToPropsForRedirect  = (state) =>{\r\n    return{\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(this.props.isAuth === false) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n   return ConnectedAuthRedirectComponent \r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3LfdB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zastavka\":\"AboutMe_zastavka__KFDjq\",\"info\":\"AboutMe_info__1QabY\",\"ava\":\"AboutMe_ava__2S3ga\",\"me\":\"AboutMe_me__1Ugbr\"};","import React from 'react'\r\nclass ProfileStatus extends React.Component{\r\n\r\n    state ={\r\n        editMode:false,\r\n        status:this.props.status\r\n    }\r\n    activateEditMode(){\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n    }\r\n    deactivateEdiMode(){\r\n        this.setState({\r\n            editMode:false\r\n        })\r\n        \r\n        this.props.updateStatusThunk(this.state.status)\r\n    }\r\n    onStatusChange = (e) =>{\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n       return(\r\n        <div>\r\n        {!this.state.editMode &&\r\n        <div>\r\n            <span onClick={this.activateEditMode.bind(this)}>{this.props.status || '----'}</span>\r\n        </div>}\r\n        {this.state.editMode &&\r\n        <div>\r\n            <input value={this.state.status} onBlur={this.deactivateEdiMode.bind(this)} onChange={this.onStatusChange} autoFocus={true}/>\r\n        </div>}\r\n    </div>\r\n       ) \r\n        \r\n    }\r\n}\r\nexport default ProfileStatus","import React, { useEffect } from 'react'\r\nimport { useState } from \"react\"\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n    let[status,setStatus] = useState(props.status)\r\n    let [editMode,setEditMode] = useState(false)\r\n    const activateEditMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatusThunk(status)\r\n    }\r\n    const  onStatusChange = (e) =>{\r\n        setStatus = (e.currentTarget.value)\r\n    }\r\n    useEffect(() =>{\r\n        setStatus(props.status);\r\n    },[props.status])\r\n    return(\r\n        <div>\r\n                {! editMode &&\r\n                    <div>\r\n                        <span onDuubleClick={activateEditMode}>{props.status || '---'}</span>\r\n                     </div>   \r\n                }\r\n                {editMode &&\r\n                        <div>\r\n                            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                        </div>\r\n\r\n                }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport s from './AboutMe.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nlet AboutMe = (props) =>{\r\n    \r\n    if(!props.profile){\r\n        return <h1>wef</h1>\r\n    }\r\n    return(\r\n        <div className={s.aboutMe}>\r\n            \r\n            <div className={s.zastavka}>\r\n                <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR5WVu-kUQPhpSAihzlDGXvLAEtkgixN1gcQg&usqp=CAU'/>\r\n            </div>\r\n            <div className={s.info}>\r\n                <div  className={s.ava}>\r\n                {props.profile.photos.small === null?\r\n                <img src='https://lh3.googleusercontent.com/proxy/vUIKWJRSVTwsGtPm69khU1LPjrXm_5NYh2mtbeLUvk08wC-AxTBj-2NLRpSp9KMCDu165iriW0oOZhYy_4_NeFAAPo-JP3xtcvL6EunB_Qg'/> \r\n                : <img src={props.profile.photos.small}/>}\r\n            \r\n                </div>\r\n                <div className={s.me}>\r\n                {props.profile.fullName === null? <h1>Not name</h1>: <h1>{props.profile.fullName}</h1>}\r\n                    \r\n                    <h2>Madrid</h2>\r\n                    <h2>22</h2>\r\n                    <ProfileStatusWithHooks status={props.status} \r\n                        updateStatusThunk={props.updateStatusThunk}/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default AboutMe","import React from 'react'\r\n\r\nimport { addPostAC, updateNewPostTextAC } from '../../../Redux/profile-reducer'\r\nimport s from './MyPost.module.css'\r\n\r\nlet MyPost = React.memo(props =>{\r\n    console.log('Df')\r\n    let PostItem = (props) =>{\r\n        return(\r\n        <div to={'/post' + props.id}>{props.post}</div>\r\n        )\r\n    }\r\n    let newPostElement = React.createRef()\r\n    let PostElement = props.profilePage.post.map(p =><PostItem post={p.post} id={p.id}/>)\r\n    let addPost = () =>{\r\n        \r\n        props.addPost()\r\n    }\r\n    let onPostChange = () =>{\r\n        let text = newPostElement.current.value\r\n        props.updateNewPostText(text)\r\n        //props.dispatch(updateNewPostTextAC(text))\r\n    }\r\n    return(\r\n        <div className={s.myPost}>\r\n            <h2>My post</h2>\r\n            {PostElement}\r\n            <textarea ref={newPostElement} onChange={onPostChange} value={props.profilePage.newPost}></textarea>\r\n            <button onClick={addPost}>Push</button>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPost","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { addPostAC, updateNewPostTextAC } from '../../../Redux/profile-reducer'\r\n\r\nimport MyPost from './MyPost'\r\n\r\n\r\n    \r\n    \r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        updateNewPostText:(text) =>{\r\n            let action = updateNewPostTextAC(text)\r\n            dispatch(action)\r\n        },\r\n        addPost:() =>{\r\n            dispatch(addPostAC());\r\n        }\r\n    }\r\n}\r\nlet MyPostContainer = connect(mapStateToProps, mapDispatchToProps )(MyPost);\r\nexport default MyPostContainer;","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport AboutMe from './AboutMe/AboutMe'\r\nimport { Redirect } from 'react-router-dom';\r\nimport MyPostContainer from './MyPost/MyPostContainer'\r\nlet Profile = (props) =>{\r\n    \r\n    \r\n    return(\r\n        <div className={s.profile}>\r\n            <AboutMe profile={props.profile} status={props.status} \r\n                        updateStatusThunk={props.updateStatusThunk}/>\r\n            <MyPostContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile","import *as axios from 'axios'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStatusThunk, setUsersProfile, updateStatusThunk } from '../../Redux/profile-reducer'\r\nimport { withRouter } from \"react-router\";\r\nimport Profile from './Profile'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount(){\r\n        \r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = 9017\r\n        }\r\n        axios.get('https://social-network.samuraijs.com/api/1.0/profile/'+ userId).then(response=>{\r\n            this.props.setUsersProfile(response.data)\r\n        })\r\n        this.props.setStatusThunk(userId)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatusThunk={this.props.updateStatusThunk}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profile:state.profilePage.profile,\r\n        isAuth:state.auth.isAuth,\r\n        status:state.profilePage.status\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps,{setUsersProfile,setStatusThunk,updateStatusThunk}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}